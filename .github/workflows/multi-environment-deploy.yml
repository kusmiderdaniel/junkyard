name: Multi-Environment CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - development
          - staging
          - production

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run type-check

      - name: Lint
        run: npm run lint

      - name: Run tests
        run: npm run test:ci

  deploy-development:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    environment: development

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create development environment file
        run: |
          echo "REACT_APP_FIREBASE_API_KEY=AIzaSyAqF8nEqXOwiaI_q6gv-TqtP8vVUSOLyXM" > .env.development.local
          echo "REACT_APP_FIREBASE_AUTH_DOMAIN=junkyard-dev-9497a.firebaseapp.com" >> .env.development.local
          echo "REACT_APP_FIREBASE_PROJECT_ID=junkyard-dev-9497a" >> .env.development.local
          echo "REACT_APP_FIREBASE_STORAGE_BUCKET=junkyard-dev-9497a.firebasestorage.app" >> .env.development.local
          echo "REACT_APP_FIREBASE_MESSAGING_SENDER_ID=160984787912" >> .env.development.local
          echo "REACT_APP_FIREBASE_APP_ID=1:160984787912:web:6ad6e938c90f1b883baefd" >> .env.development.local
          echo "REACT_APP_FIREBASE_MEASUREMENT_ID=G-01XBPBNZX3" >> .env.development.local
          echo "REACT_APP_ENV=development" >> .env.development.local

      - name: Build for development
        run: npm run build:dev

      - name: Deploy to Firebase Development
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_DEV }}'
          projectId: 'junkyard-dev-9497a'
          channelId: live

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: staging

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create staging environment file
        run: |
          echo "REACT_APP_FIREBASE_API_KEY=AIzaSyDJh1ooJsdC5MVZm4xpOdLn3IcOtxT2AKc" > .env.staging.local
          echo "REACT_APP_FIREBASE_AUTH_DOMAIN=junkyard-staging.firebaseapp.com" >> .env.staging.local
          echo "REACT_APP_FIREBASE_PROJECT_ID=junkyard-staging" >> .env.staging.local
          echo "REACT_APP_FIREBASE_STORAGE_BUCKET=junkyard-staging.firebasestorage.app" >> .env.staging.local
          echo "REACT_APP_FIREBASE_MESSAGING_SENDER_ID=628515031828" >> .env.staging.local
          echo "REACT_APP_FIREBASE_APP_ID=1:628515031828:web:aab23d835bd1fe7e035001" >> .env.staging.local
          echo "REACT_APP_FIREBASE_MEASUREMENT_ID=G-RB1T32MPXV" >> .env.staging.local
          echo "REACT_APP_ENV=staging" >> .env.staging.local

      - name: Build for staging
        run: npm run build:staging

      - name: Deploy to Firebase Staging
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_STAGING }}'
          projectId: 'junkyard-staging'
          channelId: live

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production'
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create production environment file
        run: |
          echo "REACT_APP_FIREBASE_API_KEY=AIzaSyBu_ROCWssqlbRGkR5hBcElX8qyywwwdSk" > .env.production.local
          echo "REACT_APP_FIREBASE_AUTH_DOMAIN=junkyard-31ade.firebaseapp.com" >> .env.production.local
          echo "REACT_APP_FIREBASE_PROJECT_ID=junkyard-31ade" >> .env.production.local
          echo "REACT_APP_FIREBASE_STORAGE_BUCKET=junkyard-31ade.firebasestorage.app" >> .env.production.local
          echo "REACT_APP_FIREBASE_MESSAGING_SENDER_ID=151876331997" >> .env.production.local
          echo "REACT_APP_FIREBASE_APP_ID=1:151876331997:web:0c55e72e74cbe72d8f2e34" >> .env.production.local
          echo "REACT_APP_FIREBASE_MEASUREMENT_ID=G-CVC4FY3WWT" >> .env.production.local
          echo "REACT_APP_ENV=production" >> .env.production.local

      - name: Build for production
        run: npm run build:prod

      - name: Deploy to Firebase Production
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_PROD }}'
          projectId: 'junkyard-31ade'
          channelId: live

  # Manual deployment workflow for any environment
  manual-deploy:
    name: Manual Deploy
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment != 'production'
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create environment file
        run: |
          if [ "${{ github.event.inputs.environment }}" == "development" ]; then
            echo "REACT_APP_FIREBASE_API_KEY=AIzaSyAqF8nEqXOwiaI_q6gv-TqtP8vVUSOLyXM" > .env.development.local
            echo "REACT_APP_FIREBASE_AUTH_DOMAIN=junkyard-dev-9497a.firebaseapp.com" >> .env.development.local
            echo "REACT_APP_FIREBASE_PROJECT_ID=junkyard-dev-9497a" >> .env.development.local
            echo "REACT_APP_FIREBASE_STORAGE_BUCKET=junkyard-dev-9497a.firebasestorage.app" >> .env.development.local
            echo "REACT_APP_FIREBASE_MESSAGING_SENDER_ID=160984787912" >> .env.development.local
            echo "REACT_APP_FIREBASE_APP_ID=1:160984787912:web:6ad6e938c90f1b883baefd" >> .env.development.local
            echo "REACT_APP_FIREBASE_MEASUREMENT_ID=G-01XBPBNZX3" >> .env.development.local
            echo "REACT_APP_ENV=development" >> .env.development.local
          elif [ "${{ github.event.inputs.environment }}" == "staging" ]; then
            echo "REACT_APP_FIREBASE_API_KEY=AIzaSyDJh1ooJsdC5MVZm4xpOdLn3IcOtxT2AKc" > .env.staging.local
            echo "REACT_APP_FIREBASE_AUTH_DOMAIN=junkyard-staging.firebaseapp.com" >> .env.staging.local
            echo "REACT_APP_FIREBASE_PROJECT_ID=junkyard-staging" >> .env.staging.local
            echo "REACT_APP_FIREBASE_STORAGE_BUCKET=junkyard-staging.firebasestorage.app" >> .env.staging.local
            echo "REACT_APP_FIREBASE_MESSAGING_SENDER_ID=628515031828" >> .env.staging.local
            echo "REACT_APP_FIREBASE_APP_ID=1:628515031828:web:aab23d835bd1fe7e035001" >> .env.staging.local
            echo "REACT_APP_FIREBASE_MEASUREMENT_ID=G-RB1T32MPXV" >> .env.staging.local
            echo "REACT_APP_ENV=staging" >> .env.staging.local
          fi

      - name: Build for environment
        run: npm run build:${{ github.event.inputs.environment }}

      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_DEV }}'
          projectId: ${{ github.event.inputs.environment == 'development' && 'junkyard-dev-9497a' || 'junkyard-staging' }}
          channelId: live